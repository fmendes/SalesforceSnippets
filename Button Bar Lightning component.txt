Button Bar Lightning component:


<aura:component implements="force:appHostable,flexipage:availableForRecordHome,force:hasRecordId" 
                access="global" >
    
    <aura:attribute name="recordId" type="String" />
	<aura:attribute name="record" type="Object" />
	<aura:attribute name="recordError" type="String" />

	<aura:attribute name="button1Name" type="String" />
	<aura:attribute name="button2Name" type="String" />
	<aura:attribute name="button3Name" type="String" />
	<aura:attribute name="button4Name" type="String" />
	<aura:attribute name="button5Name" type="String" />

	<aura:attribute name="button1URL" type="String" />
    <!--  default="/p/opp/SelectSearch?addTo={record.Id}&amp;retURL=%2F{record.Id}" -->
	<aura:attribute name="button2URL" type="String" />
    <!--  default="/oppitm/lineitemsort.jsp?id={record.Id}&amp;retURL=%2F{record.Id}" -->
	<aura:attribute name="button3URL" type="String" />
    <!--  default="/_ui/sales/quote/SelectSearch?addTo={record.Id}&amp;retURL=%2F{record.Id}" -->
	<aura:attribute name="button4URL" type="String" />
	<aura:attribute name="button5URL" type="String" />


	<force:recordData aura:id="service"
					  layoutType="FULL"
					  recordId="{!v.recordId}"
					  targetError="{!v.recordError}"
					  targetFields="{!v.record}"
					  mode="VIEW" />


    <!-- horizontalAlign options are
		center, space, spread, and end -->
<lightning:layout horizontalAlign=""
                  multipleRows="true" >
        
	<aura:if isTrue="{! not( empty( v.button1Name ) ) }">
    	<lightning:layoutItem padding="horizontal-small" >
            <lightning:button aura:id="button1" 
                       label="{!v.button1Name}"
                       onclick="{!c.onButtonPressed}" />
        </lightning:layoutItem>
	</aura:if>
	<aura:if isTrue="{! not( empty( v.button2Name ) ) }">
    	<lightning:layoutItem padding="horizontal-small" >
		<lightning:button aura:id="button2"
				   label="{!v.button2Name}"
				   onclick="{!c.onButtonPressed}" />
        </lightning:layoutItem>
	</aura:if>
	<aura:if isTrue="{! not( empty( v.button3Name ) ) }">
    	<lightning:layoutItem padding="horizontal-small" >
		<lightning:button aura:id="button3"
				   label="{!v.button3Name}"
				   onclick="{!c.onButtonPressed}" />
        </lightning:layoutItem>
	</aura:if>
	<aura:if isTrue="{! not( empty( v.button4Name ) ) }">
    	<lightning:layoutItem padding="horizontal-small" >
		<lightning:button aura:id="button4" 
				   label="{!v.button4Name}"
				   onclick="{!c.onButtonPressed}" />
        </lightning:layoutItem>
	</aura:if>
	<aura:if isTrue="{! not( empty( v.button5Name ) ) }">
    	<lightning:layoutItem padding="horizontal-small" >
		<lightning:button aura:id="button5" 
				   label="{!v.button5Name}"
				   onclick="{!c.onButtonPressed}" />
        </lightning:layoutItem>
	</aura:if>
<!--
	<ui:button label="Sort Line Items" 
               press="{!c.sortLineItems}" />

	<ui:button label="Add Products" 
               press="{!c.addProducts}" />
-->

</lightning:layout>
    
</aura:component>



CONTROLLER:


({
	onButtonPressed : function( component, event, helper ) {
	    // determine which button was clicked
        console.log( "event.getSource()", event.getSource() );
        var eventSource = event.getSource();

        // get the aura:id of the clicked button
        var buttonId = eventSource.getLocalId();
        console.log( "buttonId", buttonId );

        // get the URL corresponding to the clicked button
        var buttonURL;
        if( buttonId == 'button1' ) {
            buttonURL = component.get( "v.button1URL" );
        }
        if( buttonId == 'button2' ) {
            buttonURL = component.get( "v.button2URL" );
        }
        if( buttonId == 'button3' ) {
            buttonURL = component.get( "v.button3URL" );
        }
        if( buttonId == 'button4' ) {
            buttonURL = component.get( "v.button4URL" );
        }
        if( buttonId == 'button5' ) {
            buttonURL = component.get( "v.button5URL" );
        }
        console.log( "buttonURL", buttonURL );

        // replace field masks {record.*} in the URL
        var targetURL = buttonURL;
        var regex = /\{(record\..*?)\}/g;
        var matchArray = buttonURL.match( regex );
        for( var i in matchArray ) {
            // get mask - example:  {record.Name}
            var fieldMask = matchArray[ i ];

            // remove {} - example:  record.Name
            var field = fieldMask.slice( 1, -1 );
            console.log( field );

            // get field value
            var fieldValue = component.get( "v." + field );

            // replace field mask with field value in the URL
            targetURL = targetURL.replace( fieldMask, fieldValue );
        }

        console.log( "targetURL", targetURL );

        // navigate to the URL
        window.open( targetURL, "_self" );

	}
    /*
    ,
    
	addProducts : function(component, event, helper) {
        var recID = component.get( "v.recordId" );
        
        // use a different URL for oppty and quote
        var URLprefix = "/_ui/sales/quote";
        if( recID.startsWith( "006" ) ) {
            URLprefix = "/p/opp";
        }
        
        var addProdURL = URLprefix + "/SelectSearch?addTo=" 
        		+ recID + "&retURL=%2F" + recID;
		window.open( addProdURL, "_self" );
	}
    
    , sortLineItems : function(component, event, helper) {
        var recID = component.get( "v.recordId" );
        
        var URLprefix = "/oppitm/lineitemsort.jsp?id=";
        
        var addProdURL = URLprefix + recID + "&retURL=%2F" + recID;
		window.open( addProdURL, "_self" );
	}
	*/
})



DESIGN:



<design:component>

    <design:attribute name="button1Name" label="Button #1 Name"
                      description="Label of the button - example:  Add Products" />
    <design:attribute name="button2Name" label="Button #2 Name"
                      description="Label of the button - example:  Sort Line Items" />
    <design:attribute name="button3Name" label="Button #3 Name"
                      description="Label of the button" />
    <design:attribute name="button4Name" label="Button #4 Name"
                      description="Label of the button" />
    <design:attribute name="button5Name" label="Button #5 Name"
                      description="Label of the button" />

    <design:attribute name="button1URL" label="Button #1 URL"
                      description="Target URL - example for Add Product: /p/opp/SelectSearch?addTo={recordId}&amp;retURL=%2F{recordId}" />
    <design:attribute name="button2URL" label="Button #2 URL"
                      description="Target URL - example for Sort Line Items: /oppitm/lineitemsort.jsp?id={recordId}&amp;retURL=%2F{recordId}" />
    <design:attribute name="button3URL" label="Button #3 URL"
                      description="Target URL - example for Add Product: /_ui/sales/quote/SelectSearch?addTo={recordId}&amp;retURL=%2F{recordId}" />
    <design:attribute name="button4URL" label="Button #4 URL"
                      description="Target URL" />
    <design:attribute name="button5URL" label="Button #5 URL"
                      description="Target URL" />

</design:component>



SVG:



<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg width="120px" height="120px" viewBox="0 0 120 120" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
	<g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
		<path d="M120,108 C120,114.6 114.6,120 108,120 L12,120 C5.4,120 0,114.6 0,108 L0,12 C0,5.4 5.4,0 12,0 L108,0 C114.6,0 120,5.4 120,12 L120,108 L120,108 Z" id="Shape" fill="#2A739E"/>
		<path d="M77.7383308,20 L61.1640113,20 L44.7300055,63.2000173 L56.0543288,63.2000173 L40,99.623291 L72.7458388,54.5871812 L60.907727,54.5871812 L77.7383308,20 Z" id="Path-1" fill="#FFFFFF"/>
	</g>
</svg>



